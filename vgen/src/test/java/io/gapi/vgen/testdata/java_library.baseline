/*
 * Copyright 2015 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

/*
 * EDITING INSTRUCTIONS
 * This file was generated from the file
 * https://github.com/google/googleapis/blob/master/library.proto
 * and updates to that file get reflected here through a refresh process.
 * For the short term, the refresh process will only be runnable by Google engineers.
 * Manual additions are allowed because the refresh process performs
 * a 3-way merge in order to preserve those manual additions. In order to not
 * break the refresh process, only certain types of modifications are
 * allowed.
 *
 * Allowed modifications - currently these are the only types allowed:
 * 1. New methods (these should be added to the end of the class)
 * 2. New imports
 * 3. Additional documentation between "manual edit" demarcations
 *
 * Happy editing!
 */
package com.google.gcloud.pubsub.spi;

import com.google.example.library.v1.Book;
import com.google.example.library.v1.CreateBookRequest;
import com.google.example.library.v1.CreateShelfRequest;
import com.google.example.library.v1.DeleteBookRequest;
import com.google.example.library.v1.DeleteShelfRequest;
import com.google.example.library.v1.GetBookRequest;
import com.google.example.library.v1.GetShelfRequest;
import com.google.example.library.v1.LibraryServiceGrpc;
import com.google.example.library.v1.ListBooksRequest;
import com.google.example.library.v1.ListBooksResponse;
import com.google.example.library.v1.ListShelvesRequest;
import com.google.example.library.v1.ListShelvesResponse;
import com.google.example.library.v1.MergeShelvesRequest;
import com.google.example.library.v1.MoveBookRequest;
import com.google.example.library.v1.Shelf;
import com.google.example.library.v1.SomeMessage;
import com.google.example.library.v1.UpdateBookRequest;
import com.google.protobuf.Empty;
import com.google.protobuf.FieldMask;
import io.gapi.gax.grpc.ApiCallable;
import io.gapi.gax.grpc.PageDescriptor;
import io.gapi.gax.grpc.ServiceApiSettings;
import io.gapi.gax.internal.ApiUtils;
import io.gapi.gax.protobuf.PathTemplate;
import io.grpc.ManagedChannel;
import java.io.IOException;

// Manually-added imports: add custom (non-generated) imports after this point.



// AUTO-GENERATED DOCUMENTATION AND SERVICE - see instructions at the top of the file for editing.
/**
 * This API represents a simple digital library.  It lets you manage Shelf
 * resources and Book resources in the library. It defines the following
 * resource model:
 *
 * - The API has a collection of [Shelf][google.example.library.v1.Shelf]
 *   resources, named ``shelves/*``
 *
 * - Each Shelf has a collection of [Book][google.example.library.v1.Book]
 *   resources, named `shelves/&ast;/books/*`
 *
 * Check out [cloud docs!](/library/example/link).
 *
 * <!-- manual edit -->
 * <!-- end manual edit -->
 */
@javax.annotation.Generated("by the veneer generator")
public class LibraryServiceApi implements AutoCloseable {

  // =========
  // Constants
  // =========

  /**
   * The default address of the service.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static final String SERVICE_ADDRESS = "library-example.googleapis.com";

  /**
   * The default port of the service.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static final int DEFAULT_SERVICE_PORT = 443;


  private static final ApiCallable<CreateShelfRequest, Shelf>
      CREATE_SHELF = ApiCallable.create(LibraryServiceGrpc.METHOD_CREATE_SHELF);
  private static final ApiCallable<GetShelfRequest, Shelf>
      GET_SHELF = ApiCallable.create(LibraryServiceGrpc.METHOD_GET_SHELF);
  private static final ApiCallable<ListShelvesRequest, ListShelvesResponse>
      LIST_SHELVES = ApiCallable.create(LibraryServiceGrpc.METHOD_LIST_SHELVES);
  private static final ApiCallable<DeleteShelfRequest, Empty>
      DELETE_SHELF = ApiCallable.create(LibraryServiceGrpc.METHOD_DELETE_SHELF);
  private static final ApiCallable<MergeShelvesRequest, Shelf>
      MERGE_SHELVES = ApiCallable.create(LibraryServiceGrpc.METHOD_MERGE_SHELVES);
  private static final ApiCallable<CreateBookRequest, Book>
      CREATE_BOOK = ApiCallable.create(LibraryServiceGrpc.METHOD_CREATE_BOOK);
  private static final ApiCallable<GetBookRequest, Book>
      GET_BOOK = ApiCallable.create(LibraryServiceGrpc.METHOD_GET_BOOK);
  private static final ApiCallable<ListBooksRequest, ListBooksResponse>
      LIST_BOOKS = ApiCallable.create(LibraryServiceGrpc.METHOD_LIST_BOOKS);
  private static final ApiCallable<DeleteBookRequest, Empty>
      DELETE_BOOK = ApiCallable.create(LibraryServiceGrpc.METHOD_DELETE_BOOK);
  private static final ApiCallable<UpdateBookRequest, Book>
      UPDATE_BOOK = ApiCallable.create(LibraryServiceGrpc.METHOD_UPDATE_BOOK);
  private static final ApiCallable<MoveBookRequest, Book>
      MOVE_BOOK = ApiCallable.create(LibraryServiceGrpc.METHOD_MOVE_BOOK);

  private static PageDescriptor<ListShelvesRequest, ListShelvesResponse, Shelf> LIST_SHELVES_PAGE_DESC =
      new PageDescriptor<ListShelvesRequest, ListShelvesResponse, Shelf>() {
        @Override
        public Object emptyToken() {
          return "";
        }
        @Override
        public ListShelvesRequest injectToken(
            ListShelvesRequest payload, Object token) {
          return ListShelvesRequest
            .newBuilder(payload)
            .setPageToken((String) token)
            .build();
        }
        @Override
        public Object extractNextToken(ListShelvesResponse payload) {
          return payload.getNextPageToken();
        }
        @Override
        public Iterable<Shelf> extractResources(ListShelvesResponse payload) {
          return payload.getShelvesList();
        }
      };

  private static PageDescriptor<ListBooksRequest, ListBooksResponse, Book> LIST_BOOKS_PAGE_DESC =
      new PageDescriptor<ListBooksRequest, ListBooksResponse, Book>() {
        @Override
        public Object emptyToken() {
          return "";
        }
        @Override
        public ListBooksRequest injectToken(
            ListBooksRequest payload, Object token) {
          return ListBooksRequest
            .newBuilder(payload)
            .setPageToken((String) token)
            .build();
        }
        @Override
        public Object extractNextToken(ListBooksResponse payload) {
          return payload.getNextPageToken();
        }
        @Override
        public Iterable<Book> extractResources(ListBooksResponse payload) {
          return payload.getBooksList();
        }
      };

  private static String ALL_SCOPES[] = {
    "https://www.googleapis.com/auth/library",
    "https://www.googleapis.com/auth/cloud-platform",
  };

  /**
   * A PathTemplate representing the fully-qualified path to represent
   * a shelf resource.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  private static final PathTemplate SHELF_PATH_TEMPLATE =
      PathTemplate.create("shelves/{shelf}");
  /**
   * A PathTemplate representing the fully-qualified path to represent
   * a book resource.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  private static final PathTemplate BOOK_PATH_TEMPLATE =
      PathTemplate.create("shelves/{shelf}/books/{book}");

  // ========
  // Members
  // ========

  private final ManagedChannel channel;
  private final ServiceApiSettings settings;

  // ===============
  // Factory Methods
  // ===============

  /**
   * Constructs an instance of LibraryServiceApi with default settings.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static LibraryServiceApi create() throws IOException {
    return create(new ServiceApiSettings());
  }

  /**
   * Constructs an instance of LibraryServiceApi, using the given settings. The channels are created based
   * on the settings passed in, or defaults for any settings that are not set.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static LibraryServiceApi create(ServiceApiSettings settings) throws IOException {
    return new LibraryServiceApi(settings);
  }

  /**
   * Constructs an instance of LibraryServiceApi, using the given settings. This is protected so that it
   * easy to make a subclass, but otherwise, the static factory methods should be preferred.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  protected LibraryServiceApi(ServiceApiSettings settings) throws IOException {
    ServiceApiSettings internalSettings = ApiUtils.populateSettings(settings,
        SERVICE_ADDRESS, DEFAULT_SERVICE_PORT, ALL_SCOPES);
    this.settings = internalSettings;
    this.channel = internalSettings.getChannel();
  }

  // ==============================
  // Resource Name Helper Functions
  // ==============================

  /**
   * Creates a string containing the fully-qualified path to represent
   * a shelf resource.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static final String createShelfPath(String shelf) {
    return SHELF_PATH_TEMPLATE.instantiate(
        "shelf", shelf);
  }

  /**
   * Creates a string containing the fully-qualified path to represent
   * a book resource.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static final String createBookPath(String shelf, String book) {
    return BOOK_PATH_TEMPLATE.instantiate(
        "shelf", shelf,"book", book);
  }


  /**
   * Extracts the shelf from the given fully-qualified path which
   * represents a shelf resource.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static final String extractShelfFromShelfPath(String shelfPath) {
    return SHELF_PATH_TEMPLATE.parse(shelfPath).get("shelf");
  }

  /**
   * Extracts the shelf from the given fully-qualified path which
   * represents a book resource.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static final String extractShelfFromBookPath(String bookPath) {
    return BOOK_PATH_TEMPLATE.parse(bookPath).get("shelf");
  }

  /**
   * Extracts the book from the given fully-qualified path which
   * represents a book resource.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public static final String extractBookFromBookPath(String bookPath) {
    return BOOK_PATH_TEMPLATE.parse(bookPath).get("book");
  }


  // =============
  // Service Calls
  // =============

  // ----- createShelf -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Creates a shelf, and returns the new Shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param shelf The shelf to create.
   */
  public Shelf createShelf(Shelf shelf) {
    CreateShelfRequest request =
        CreateShelfRequest.newBuilder()
        .setShelf(shelf)
        .build();

    return createShelf(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Creates a shelf, and returns the new Shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Shelf createShelf(CreateShelfRequest request) {
    return createShelfCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Creates a shelf, and returns the new Shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<CreateShelfRequest, Shelf> createShelfCallable() {
    return CREATE_SHELF.bind(channel);
  }

  // ----- getShelf -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Gets a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the shelf to retrieve.
   */
  public Shelf getShelf(String name) {
    GetShelfRequest request =
        GetShelfRequest.newBuilder()
        .setName(name)
        .build();

    return getShelf(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Gets a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the shelf to retrieve.
   * @param message Field to verify that message-type query parameter gets flattened.
   */
  public Shelf getShelf(String name, SomeMessage message) {
    GetShelfRequest request =
        GetShelfRequest.newBuilder()
        .setName(name)
        .setMessage(message)
        .build();

    return getShelf(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Gets a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the shelf to retrieve.
   * @param message Field to verify that message-type query parameter gets flattened.
   * @param stringBuilder
   */
  public Shelf getShelf(String name, SomeMessage message, com.google.example.library.v1.StringBuilder stringBuilder) {
    GetShelfRequest request =
        GetShelfRequest.newBuilder()
        .setName(name)
        .setMessage(message)
        .setStringBuilder(stringBuilder)
        .build();

    return getShelf(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Gets a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Shelf getShelf(GetShelfRequest request) {
    return getShelfCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Gets a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<GetShelfRequest, Shelf> getShelfCallable() {
    return ApiUtils.prepareIdempotentCallable(GET_SHELF, settings).bind(channel);
  }

  // ----- listShelves -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Lists shelves.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public Iterable<Shelf> listShelves() {
    ListShelvesRequest request =
        ListShelvesRequest.newBuilder()

        .build();
    return listShelves(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Lists shelves.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Iterable<Shelf> listShelves(ListShelvesRequest request) {
    return listShelvesStreamingCallable()
        .call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Lists shelves.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<ListShelvesRequest, Iterable<Shelf>> listShelvesStreamingCallable() {
    return listShelvesCallable().pageStreaming(LIST_SHELVES_PAGE_DESC);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Lists shelves.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<ListShelvesRequest, ListShelvesResponse> listShelvesCallable() {
    return ApiUtils.prepareIdempotentCallable(LIST_SHELVES, settings).bind(channel);
  }

  // ----- deleteShelf -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Deletes a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the shelf to delete.
   */
  public void deleteShelf(String name) {
    DeleteShelfRequest request =
        DeleteShelfRequest.newBuilder()
        .setName(name)
        .build();

    deleteShelf(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Deletes a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public void deleteShelf(DeleteShelfRequest request) {
    deleteShelfCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Deletes a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<DeleteShelfRequest, Empty> deleteShelfCallable() {
    return ApiUtils.prepareIdempotentCallable(DELETE_SHELF, settings).bind(channel);
  }

  // ----- mergeShelves -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Merges two shelves by adding all books from the shelf named
   * `other_shelf_name` to shelf `name`, and deletes
   * `other_shelf_name`. Returns the updated shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the shelf we're adding books to.
   * @param otherShelfName The name of the shelf we're removing books from and deleting.
   */
  public Shelf mergeShelves(String name, String otherShelfName) {
    MergeShelvesRequest request =
        MergeShelvesRequest.newBuilder()
        .setName(name)
        .setOtherShelfName(otherShelfName)
        .build();

    return mergeShelves(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Merges two shelves by adding all books from the shelf named
   * `other_shelf_name` to shelf `name`, and deletes
   * `other_shelf_name`. Returns the updated shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Shelf mergeShelves(MergeShelvesRequest request) {
    return mergeShelvesCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Merges two shelves by adding all books from the shelf named
   * `other_shelf_name` to shelf `name`, and deletes
   * `other_shelf_name`. Returns the updated shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<MergeShelvesRequest, Shelf> mergeShelvesCallable() {
    return MERGE_SHELVES.bind(channel);
  }

  // ----- createBook -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Creates a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the shelf in which the book is created.
   * @param book The book to create.
   */
  public Book createBook(String name, Book book) {
    CreateBookRequest request =
        CreateBookRequest.newBuilder()
        .setName(name)
        .setBook(book)
        .build();

    return createBook(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Creates a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Book createBook(CreateBookRequest request) {
    return createBookCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Creates a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<CreateBookRequest, Book> createBookCallable() {
    return CREATE_BOOK.bind(channel);
  }

  // ----- getBook -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Gets a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the book to retrieve.
   */
  public Book getBook(String name) {
    GetBookRequest request =
        GetBookRequest.newBuilder()
        .setName(name)
        .build();

    return getBook(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Gets a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Book getBook(GetBookRequest request) {
    return getBookCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Gets a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<GetBookRequest, Book> getBookCallable() {
    return ApiUtils.prepareIdempotentCallable(GET_BOOK, settings).bind(channel);
  }

  // ----- listBooks -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Lists books in a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public Iterable<Book> listBooks(String name, String filter) {
    ListBooksRequest request =
        ListBooksRequest.newBuilder()
        .setName(name)
        .setFilter(filter)
        .build();
    return listBooks(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Lists books in a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Iterable<Book> listBooks(ListBooksRequest request) {
    return listBooksStreamingCallable()
        .call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Lists books in a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<ListBooksRequest, Iterable<Book>> listBooksStreamingCallable() {
    return listBooksCallable().pageStreaming(LIST_BOOKS_PAGE_DESC);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Lists books in a shelf.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<ListBooksRequest, ListBooksResponse> listBooksCallable() {
    return ApiUtils.prepareIdempotentCallable(LIST_BOOKS, settings).bind(channel);
  }

  // ----- deleteBook -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Deletes a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the book to delete.
   */
  public void deleteBook(String name) {
    DeleteBookRequest request =
        DeleteBookRequest.newBuilder()
        .setName(name)
        .build();

    deleteBook(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Deletes a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public void deleteBook(DeleteBookRequest request) {
    deleteBookCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Deletes a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<DeleteBookRequest, Empty> deleteBookCallable() {
    return ApiUtils.prepareIdempotentCallable(DELETE_BOOK, settings).bind(channel);
  }

  // ----- updateBook -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Updates a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the book to update.
   * @param book The book to update with.
   */
  public Book updateBook(String name, Book book) {
    UpdateBookRequest request =
        UpdateBookRequest.newBuilder()
        .setName(name)
        .setBook(book)
        .build();

    return updateBook(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Updates a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the book to update.
   * @param book The book to update with.
   * @param updateMask A field mask to apply, rendered as an HTTP parameter.
   * @param physicalMask To test Python import clash resolution.
   */
  public Book updateBook(String name, Book book, FieldMask updateMask, com.google.example.library.v1.FieldMask physicalMask) {
    UpdateBookRequest request =
        UpdateBookRequest.newBuilder()
        .setName(name)
        .setBook(book)
        .setUpdateMask(updateMask)
        .setPhysicalMask(physicalMask)
        .build();

    return updateBook(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Updates a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Book updateBook(UpdateBookRequest request) {
    return updateBookCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Updates a book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<UpdateBookRequest, Book> updateBookCallable() {
    return ApiUtils.prepareIdempotentCallable(UPDATE_BOOK, settings).bind(channel);
  }

  // ----- moveBook -----

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Moves a book to another shelf, and returns the new book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param name The name of the book to move.
   * @param otherShelfName The name of the destination shelf.
   */
  public Book moveBook(String name, String otherShelfName) {
    MoveBookRequest request =
        MoveBookRequest.newBuilder()
        .setName(name)
        .setOtherShelfName(otherShelfName)
        .build();

    return moveBook(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Moves a book to another shelf, and returns the new book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   *
   * @param request The request object containing all of the parameters for the API call.
   */
  public Book moveBook(MoveBookRequest request) {
    return moveBookCallable().call(request);
  }

  // AUTO-GENERATED DOCUMENTATION AND METHOD - see instructions at the top of the file for editing.
  /**
   * Moves a book to another shelf, and returns the new book.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  public ApiCallable<MoveBookRequest, Book> moveBookCallable() {
    return MOVE_BOOK.bind(channel);
  }


  // ========
  // Cleanup
  // ========

  /**
   * Initiates an orderly shutdown in which preexisting calls continue but new calls are immediately
   * cancelled.
   *
   * <!-- manual edit -->
   * <!-- end manual edit -->
   */
  @Override
  public void close() {
    // Manually-added shutdown code

    // Auto-generated shutdown code
    channel.shutdown();

    // Manually-added shutdown code
  }


  // ========
  // Manually-added methods: add custom (non-generated) methods after this point.
  // ========

}
